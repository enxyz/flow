"""Changes layer-value schema.

Revision ID: 089f276fe6a9
Revises: 5a6f225a78e3
Create Date: 2020-07-12 10:32:57.475552

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '089f276fe6a9'
down_revision = '5a6f225a78e3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('layer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('derivation_id', sa.Integer(), nullable=True),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=512), nullable=True),
    sa.Column('formula', sa.String(length=512), nullable=True),
    sa.Column('row_count', sa.Integer(), nullable=True),
    sa.Column('column_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['derivation_id'], ['derivation.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('layer_value',
    sa.Column('layer_id', sa.Integer(), nullable=False),
    sa.Column('row', sa.Integer(), nullable=False),
    sa.Column('column', sa.Integer(), nullable=False),
    sa.Column('compound_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Numeric(precision=64, scale=32), nullable=True),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.id'], ),
    sa.ForeignKeyConstraint(['layer_id'], ['layer.id'], ),
    sa.PrimaryKeyConstraint('layer_id', 'row', 'column')
    )
    op.drop_table('sample_value')
    op.drop_table('value_layer')
    op.drop_table('derived_layer')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('derived_layer',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('derived_layer_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('derivation_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('run_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('formula', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('row_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('column_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['derivation_id'], ['derivation.id'], name='derived_layer_derivation_id_fkey'),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], name='derived_layer_run_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='derived_layer_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('value_layer',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('value_layer_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('row_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('column_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], name='value_layer_run_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='value_layer_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('sample_value',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('value_layer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('derived_layer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('compound_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('run_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sample_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('row', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('column', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('value', sa.NUMERIC(precision=64, scale=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.id'], name='sample_value_compound_id_fkey'),
    sa.ForeignKeyConstraint(['derived_layer_id'], ['derived_layer.id'], name='sample_value_derived_layer_id_fkey'),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], name='sample_value_run_id_fkey'),
    sa.ForeignKeyConstraint(['value_layer_id'], ['value_layer.id'], name='sample_value_value_layer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sample_value_pkey')
    )
    op.drop_table('layer_value')
    op.drop_table('layer')
    # ### end Alembic commands ###
